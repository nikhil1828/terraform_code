name: Terraform Execution

on:
  push:
    branches: [master]
  pull_request:

jobs:

  job1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Actions-R-Us/actions-tagger@latest
        with:
          publish_latest: true
        env:
          GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'

      

      # - name: Generate release tag
      #   uses: amitsingh-007/next-release-tag@v1.0.0
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.release_tag }}
      #     release_name: Release ${{ env.release_tag }}

      - uses: anothrNick/github-tag-action@1.40.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: latest
      #     prerelease: true
      #     # title: "Development Build"


      # - uses: phish108/autotag-action@1.1.52
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}

      # - uses: Klemensas/action-autotag@stable
      #   with:
      #     GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      #     tag_prefix: "v"
      
      # - uses: aurestic/incrementarl-create-release@master
      #   with:
      #     flag_branch: false
      #     message: Bump version
      #     prev_tag: 'v'
      #     update_odoo_module_version: false
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  # job2:
  #   # needs: job1
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_ACCESS_KEY_ID:      ${{secrets.AWS_ACCESS_KEY_ID}} 
  #     AWS_SECRET_ACCESS_KEY:  ${{secrets.AWS_SECRET_ACCESS_KEY}} 
  #     GITHUB_TOKEN:           ${{secrets.GITHUB_TOKEN}}

  #   steps:
  #     - uses: actions/checkout@v2
  #       name: Download codebase
      
  #     # - name: terraform plan 
  #     #   uses: dflook/terraform-plan@v1
      
  #     - name: configure AWS
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-southeast-1

  #     - name: Terraform Initialized
  #       run:  terraform init

  #     - name: Terraform Plan
  #       run:  terraform plan -input=false
    
      # - name: update ASG 1
      #   run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name terraform-asg120220926101656783300000003 --launch-configuration-name my-lc
    
      # - name: update ASG 2
      #   run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name terraform-asg220220926101649018400000002 --launch-configuration-name my-lc

      
##########